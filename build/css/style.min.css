/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:border-box}a{display:inline-block;cursor:pointer;text-decoration:none}img{display:block;width:100%;height:auto}li,ul{margin:0;padding:0}li{list-style:none}h1,h2,h3,h4,h5,h6{font-weight:400;margin:0;padding:0}p{margin:.5rem 0}input{font:inherit;border:none;background:0 0}input[type=button]{padding:0;cursor:pointer}button{font:inherit;padding:0;cursor:pointer;letter-spacing:inherit;color:inherit;border:none;outline:0;background:0 0}html{scroll-behavior:smooth;font-size:16px}body{background:#000;font-family:Arial,sans-serif;line-height:1.1;margin:0;color:#fff}.container{width:1200px;max-width:100%;margin:auto;padding:0 15px}.intro{position:relative;background-repeat:no-repeat;background-position:center;background-size:cover}.intro::after{position:absolute;top:0;left:0;display:block;width:100%;height:100%;content:'';background:rgba(0,0,0,.4)}.intro__inner{position:relative;z-index:1;display:flex;align-items:center;flex-direction:column;justify-content:center;max-width:950px;margin:0 auto;padding:230px 0 160px;text-align:center}.intro__title{font-size:3.125rem;font-weight:600;max-width:625px}@media only screen and (max-width:575px){.intro__title{font-size:1.7rem}}.intro__subtitle{font-size:1.625rem;margin:1rem}@media only screen and (max-width:575px){.intro__subtitle{font-size:1.4rem}}@media only screen and (max-width:575px){.intro__subtitle{font-size:1.2rem}}.features__item{display:flex;align-items:center;justify-content:center;padding:45px 45px;border-top:8px solid #222}@media only screen and (max-width:991px){.features__item{flex-direction:column}}.features__item:nth-child(odd){flex-direction:row-reverse}@media only screen and (max-width:991px){.features__item:nth-child(odd){flex-direction:column}}.features__item:last-child{border-bottom:8px solid #222}.features__item-img-container{position:relative;max-width:42%}@media only screen and (max-width:991px){.features__item-img-container{max-width:100%}}.features__item-img{position:relative;z-index:2;overflow:hidden}.features__item-vid{position:absolute;width:100%;height:100%}.features__item-vid.features__item-vid--tv{top:48%;left:49%;max-width:75%;max-height:55%;transform:translate(-49%,-50%)}.features__item-vid.features__item-vid--mac{top:34%;left:50%;max-width:63%;max-height:47%;transform:translate(-50%,-50%)}.features__item-panel{background:#000;position:absolute;z-index:2;top:70%;left:50%;display:flex;align-items:center;justify-content:space-between;width:60%;padding:.5em .75em;transform:translate(-50%,-10%);border:2px solid #303030;border-radius:.75em}@media only screen and (max-width:991px){.features__item-panel{width:65%}}@media only screen and (max-width:480px){.features__item-panel{width:110%}}.features__item-panel-img{max-width:17%;margin-right:1em}.features__item-descrip{max-width:49%;padding-left:3rem}@media only screen and (max-width:991px){.features__item-descrip{max-width:100%;padding-left:0;text-align:center}}.features__item-panel-txt{font-weight:600}@media only screen and (max-width:991px){.features__item-panel-txt{margin-right:3rem}}@media only screen and (max-width:480px){.features__item-panel-txt{margin-right:1rem}}.features__item-panel-txt span{font-size:.9rem;font-weight:400;color:#0071eb}.features__item-title{font-size:3.125rem;font-weight:600;margin-bottom:.5rem}@media only screen and (max-width:991px){.features__item-title{font-size:2.5rem}}@media only screen and (max-width:480px){.features__item-title{font-size:2rem}}.features__item-txt{font-size:1.625rem;line-height:1.2}@media only screen and (max-width:991px){.features__item-txt{font-size:1.4rem}}@media only screen and (max-width:480px){.features__item-txt{font-size:1.2rem}}.faq{padding:70px 0;border-bottom:8px solid #222}.faq__title{font-size:3.125rem;font-weight:600;text-align:center}@media only screen and (max-width:991px){.faq__title{font-size:2.5rem}}@media only screen and (max-width:480px){.faq__title{font-size:2rem}}.faq__list{display:flex;align-items:center;flex-direction:column;justify-content:center;max-width:70%;margin:2em auto}@media only screen and (max-width:991px){.faq__list{max-width:100%}}.faq__item{background:#303030;font-size:1.625rem;line-height:1.2;width:100%;margin-bottom:10px;color:#fff}@media only screen and (max-width:991px){.faq__item{font-size:1.3rem}}@media only screen and (max-width:480px){.faq__item{font-size:1rem}}.faq__item.faq__item--active .faq__item-answer{display:block}.faq__item.faq__item--active .faq__item-icon{transform:rotate(45deg)}.faq__item-question{display:flex;align-items:center;justify-content:space-between;width:100%;padding:.8em 1.2em;border-bottom:1px solid #000}@media only screen and (max-width:991px){.faq__item-question{padding:.5em 1.2em}}.faq__item-icon{width:30px;height:30px;transition:.25s cubic-bezier(.5,0,.1,1);fill:#fff}@media only screen and (max-width:991px){.faq__item-icon{width:20px;height:20px}}@media only screen and (max-width:480px){.faq__item-icon{width:15px;height:15px}}.faq__item-answer{display:none;max-width:1200px;padding:1rem 1.2em}.faq__item-answer-txt{margin-bottom:1.2rem}.form-start{display:flex;align-items:center;flex-direction:column;margin-top:.85rem}.form-wrap{display:flex;justify-content:center;text-align:center}.form-start__title{font-size:1.2rem;margin-bottom:1.2rem}@media only screen and (max-width:767px){.form-start__title{font-size:1.4rem;max-width:300px}}@media only screen and (max-width:575px){.form-start__title{font-size:1.2rem}}.form-start__inner{display:flex;align-items:stretch}@media only screen and (max-width:767px){.form-start__inner{align-items:center;flex-direction:column}}.form-start__input{background:#fff;font-size:1.1rem;width:100%;min-width:450px;padding:20px 10px;border-radius:2px 0 0 2px}@media only screen and (max-width:991px){.form-start__input{min-width:400px}}@media only screen and (max-width:767px){.form-start__input{max-width:450px;margin-bottom:15px;border-radius:2px}}@media only screen and (max-width:575px){.form-start__input{font-size:1rem;padding:12px 10px}}@media only screen and (max-width:480px){.form-start__input{min-width:300px;max-width:300px}}.form-start__submit{background:#e50914;position:relative;color:#fff;border:1px solid #e50914;border-left:1px solid #222;padding:15px 160px;border-radius:0 2px 2px 0}.form-start__submit:hover{background:#f50d19;transition:background-color .1s linear}@media only screen and (max-width:767px){.form-start__submit{padding:25px 120px;border-radius:2px}}@media only screen and (max-width:575px){.form-start__submit{padding:20px 90px}}.form-start__submit:focus{outline:1px dotted #212121;outline:5px auto -webkit-focus-ring-color}.form-start__submit span{font-size:1.7rem;position:absolute;top:50%;left:50%;min-width:100%;transform:translate(-50%,-50%);text-transform:uppercase}@media only screen and (max-width:767px){.form-start__submit span{font-size:1.2rem}}@media only screen and (max-width:575px){.form-start__submit span{font-size:1rem}}.form-start__icon{width:17px;height:17px;margin-left:.5rem;fill:#fff}@media only screen and (max-width:767px){.form-start__icon{display:none}}.header{position:absolute;z-index:1000;top:0;left:0;width:100%;height:100px}.header__inner{display:flex;align-items:center;justify-content:space-between;margin:0 1.5rem}.header__logo{max-width:170px}@media only screen and (max-width:480px){.header__logo{max-width:130px}}.header__link{background:#e50914;padding:8px 18px;border-radius:3px 3px 3px 3px}.header__link:hover{background:#f50d19;transition:background-color .1s linear}.footer{padding:70px 0 30px}.footer__inner{padding:0 300px 0 150px}@media only screen and (max-width:991px){.footer__inner{padding:0 40px}}.footer__items-wrap{display:flex;align-items:flex-start;flex-wrap:wrap;justify-content:space-between}.footer__item{display:flex;flex-direction:column;margin-right:.7rem}@media only screen and (max-width:575px){.footer__item{width:35%}}.footer__item-link{font-size:.8rem;margin-bottom:1.5rem;color:#7b7b7b}.footer__item-link:hover{text-decoration:underline}.footer__item-link.footer__item-link--contact{font-size:1rem;margin-bottom:2rem}.footer__item-country{font-size:.8rem;margin-top:1.5rem;color:#7b7b7b}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2xvY2FsX21vZHVsZXMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzIiwic3R5bGUuY3NzIiwiY29tbW9uL2dsb2JhbC5zY3NzIiwiaW5kZXgvaW50cm8uc2NzcyIsImluZGV4L2ZlYXR1cmVzLnNjc3MiLCJtaXhpbnMvbWVkaWEuc2NzcyIsImluZGV4L2ZhcS5zY3NzIiwidXRpbHMvdmFycy5zY3NzIiwiaW5kZXgvZm9ybS1zdGFydC5zY3NzIiwibWl4aW5zL2J1dHRvbnMuc2NzcyIsImNvbW1vbi9oZWFkZXIuc2NzcyIsImNvbW1vbi9mb290ZXIuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RUNVQSxLREVrQyxZQUFPLEtBR3pDLHlCQUFBLEtBZUEsS0FDRSxPQUFBLEVDQ0YsS0RTRSxRQUFBLE1BV0YsR0FDRSxVQUFBLElBQXlCLE9BQUEsTUFBQSxFQ0MzQixHRFVxQyxXQUFBLFlBQ25CLE9BQU8sRUFHekIsU0FBQSxRQ0FBLElBQ0UsS0FBTSxJQUFJLFNBQVMsQ0FBRSxVQVl2QixFQUFFLFdBQUEsSUFTRixZRGNBLGNBQUEsS0NYRSxnQkFBaUIsVURja0Isd0JBQUEsVUFBQSxPQUNuQyxnQkFBYyxVQUFBLE9DSmhCLEVEZUEsT0NiRSxZQUFhLE9BUWYsS0FDQSxJRGlCQSxLQUNFLEtBQUEsSUFBQSxTQUFlLENBQUEsVUNQakIsTURxQkEsVUFBQSxJQ1pBLElEd0JBLElDdEJFLFVBQVcsSUFDWCxZQUFhLEVBQ2IsU0FBVSxTQUNWLGVBQWdCLFNBR2xCLElEc0JtQixPQUFBLE9DbEJuQixJRG9CYSxJQUFBLE1DVGIsSURzQkEsYUFBQSxLQ1ZBLE9Ed0JBLE1DdEJBLFNBQ0EsT0FDQSxTRHdCRSxLQUFBLElBQUEsQ0FBQSxLQUFBLFFDcEJBLE9BQUEsRUFVRixPQUNBLE1BRUUsU0FBVSxRRHFDWixPQzVCQSxPRGdDQSxlQUFBLEtDdEJBLGNBQ0EsYUFDQSxjQUhBLE9EaUNFLG1CQUFjLE9DckJoQixnQ0QyQkEsK0JDekJBLGdD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LElBQ0EsVUFBQSxJQUVBLFdBQVcsSUFDWCxVQUFBLHFCTDJnQkosc0JBQ0UsV0t2Z0JNLEtMd2dCTixTQUFVLFNLcGdCWixRQUFBLEVBQ0ksSUFBQSxJQUNBLEtBQUEsSUFFQSxRQUFBLEtBRUEsWUMxRXNCLE9GQXRCLGdCQUFBLGNKK2tCRixNSzNnQkYsSUw0Z0JFLFFLcGdCTSxLQUFBLE1McWdCTixVS3BnQk0scUJEM0RKLE9BQUEsSUFBQSxNQUFBLFFKaWtCRixjSy9nQkYsTUxraEJBLHlDS2pnQkEsc0JBQ0ksTUFBQSxLQU1KLHlDQUNJLHNCTGlnQkEsTUFBTyxNQUlYLDBCT3BtQkksVUFBQSxJUHNtQkYsYUFBYyxJQUdoQix3Qk9sbUJJLFVBQUEsSVBvbUJGLGFBQWMsS0FHaEIseUNJdG1CSSx3QkdFSixVQUFBLEtQdW1CSSxhT2ptQkksRVBrbUJKLFdPaG1CSSxRUG9tQlIsMEJPN2xCQSxZQUFBLElQaW1CQSx5Q0FDRSwwQkFDRSxhTzlsQkksTVBrbUJSLHlDTzFsQkksMEJBQ0EsYUFBZ0IsTVArbEJwQiwrQkFDRSxVT3BtQkYsTVBxbUJFLFlPMWxCTSxJSHRDSixNQUFBLFFKb29CSixzQkFDRSxVT3psQk0sU0h0Q0osWUFBQSxJSmlvQkYsY081bUJGLE1QK21CQSx5Q0FDRSxzQkFDRSxVT3hsQkksUVA0bEJSLHlDT3BsQkksc0JBQ0EsVUFBQSxNUHlsQkosb0JRN3BCSSxVQUFBLFNSK3BCRixZUTlwQk0sSVJpcUJSLHlDQUNFLG9CQUNFLFVPemxCSSxRUDZsQlIseUNBQ0Usb0JPdmxCTSxVQUFBLFFQNGxCUixLQUNFLFFPcmxCTSxLQUFTLEVQc2xCZixjT3BsQk0sSUFBZSxNQUFBLEtQdWxCdkIsWUFDRSxVT3BuQkYsU1BxbkJFLFlPbmxCVSxJUG9sQlYsV0l6cUJFLE9KNHFCSix5Q08va0JBLFlBQ0ksVUFBVyxRUG9sQmYseUNBQ0UsWUFDRSxVT2hsQkksTVBvbEJSLFdTbHNCSSxRQUFNLEtBQ04sWUFBTyxPQUVQLGVBQVcsT0FDWCxnQkFBYSxPVG1zQmYsVUFBVyxJU2hzQmIsT0FBQSxJ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R25CLGNBQ0UsUUFBUyxLQUNULGVBQWdCLE9BQ2hCLGFBQWMsTUFHaEIseUNBQ0UsY0FDRSxNQUFPLEtBSVgsbUJBQ0UsVUFBVyxNQUNYLGNBQWUsT0FDZixNQUFPLFFBR1QseUJBQ0UsZ0JBQWlCLFVBR25CLDhDQUNFLFVBQVcsS0FDWCxjQUFlLEtBR2pCLHNCQUNFLFVBQVcsTUFDWCxXQUFZLE9BQ1osTUFBTyIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbiosXG4qOjphZnRlcixcbio6OmJlZm9yZSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuYSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87IH1cblxudWwsXG5saSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG5saSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbnAge1xuICBtYXJnaW46IC41cmVtIDA7IH1cblxuaW5wdXQge1xuICBmb250OiBpbmhlcml0O1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IG5vbmU7IH1cblxuaW5wdXRbdHlwZT0nYnV0dG9uJ10ge1xuICBwYWRkaW5nOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuYnV0dG9uIHtcbiAgZm9udDogaW5oZXJpdDtcbiAgcGFkZGluZzogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBsZXR0ZXItc3BhY2luZzogaW5oZXJpdDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTsgfVxuXG5odG1sIHtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG4gIGZvbnQtc2l6ZTogMTZweDsgfVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgbWFyZ2luOiAwO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDsgfVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEyMDBweDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMTVweDsgfVxuXG4uaW50cm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuICAuaW50cm86OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC40KTsgfVxuXG4uaW50cm9fX2lubmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWF4LXdpZHRoOiA5NTBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDIzMHB4IDAgMTYwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uaW50cm9fX3RpdGxlIHtcbiAgZm9udC1zaXplOiAzLjEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWF4LXdpZHRoOiA2MjVweDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmludHJvX190aXRsZSB7XG4gICAgICBmb250LXNpemU6IDEuN3JlbTsgfSB9XG5cbi5pbnRyb19fc3VidGl0bGUge1xuICBmb250LXNpemU6IDEuNjI1cmVtO1xuICBtYXJnaW46IDFyZW07IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5pbnRyb19fc3VidGl0bGUge1xuICAgICAgZm9udC1zaXplOiAxLjRyZW07IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmludHJvX19zdWJ0aXRsZSB7XG4gICAgICBmb250LXNpemU6IDEuMnJlbTsgfSB9XG5cbi5mZWF0dXJlc19faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiA0NXB4IDQ1cHg7XG4gIGJvcmRlci10b3A6IDhweCBzb2xpZCAjMjIyOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgICAuZmVhdHVyZXNfX2l0ZW0ge1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfSB9XG4gIC5mZWF0dXJlc19faXRlbTpudGgtY2hpbGQob2RkKSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xuICAgICAgLmZlYXR1cmVzX19pdGVtOm50aC1jaGlsZChvZGQpIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfSB9XG4gIC5mZWF0dXJlc19faXRlbTpsYXN0LWNoaWxkIHtcbiAgICBib3JkZXItYm90dG9tOiA4cHggc29saWQgIzIyMjsgfVxuXG4uZmVhdHVyZXNfX2l0ZW0taW1nLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWF4LXdpZHRoOiA0MiU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xuICAgIC5mZWF0dXJlc19faXRlbS1pbWctY29udGFpbmVyIHtcbiAgICAgIG1heC13aWR0aDogMTAwJTsgfSB9XG5cbi5mZWF0dXJlc19faXRlbS1pbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLmZlYXR1cmVzX19pdGVtLXZpZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuICAuZmVhdHVyZXNfX2l0ZW0tdmlkLmZlYXR1cmVzX19pdGVtLXZpZC0tdHYge1xuICAgIHRvcDogNDglO1xuICAgIGxlZnQ6IDQ5JTtcbiAgICBtYXgtd2lkdGg6IDc1JTtcbiAgICBtYXgtaGVpZ2h0OiA1NSU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTQ5JSwgLTUwJSk7IH1cbiAgLmZlYXR1cmVzX19pdGVtLXZpZC5mZWF0dXJlc19faXRlbS12aWQtLW1hYyB7XG4gICAgdG9wOiAzNCU7XG4gICAgbGVmdDogNTAlO1xuICAgIG1heC13aWR0aDogNjMlO1xuICAgIG1heC1oZWlnaHQ6IDQ3JTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuXG4uZmVhdHVyZXNfX2l0ZW0tcGFuZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDI7XG4gIHRvcDogNzAlO1xuICBsZWZ0OiA1MCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgd2lkdGg6IDYwJTtcbiAgcGFkZGluZzogLjVlbSAuNzVlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTEwJSk7XG4gIGJvcmRlcjogMnB4IHNvbGlkICMzMDMwMzA7XG4gIGJvcmRlci1yYWRpdXM6IC43NWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgICAuZmVhdHVyZXNfX2l0ZW0tcGFuZWwge1xuICAgICAgd2lkdGg6IDY1JTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuZmVhdHVyZXNfX2l0ZW0tcGFuZWwge1xuICAgICAgd2lkdGg6IDExMCU7IH0gfVxuXG4uZmVhdHVyZXNfX2l0ZW0tcGFuZWwtaW1nIHtcbiAgbWF4LXdpZHRoOiAxNyU7XG4gIG1hcmdpbi1yaWdodDogMWVtOyB9XG5cbi5mZWF0dXJlc19faXRlbS1kZXNjcmlwIHtcbiAgbWF4LXdpZHRoOiA0OSU7XG4gIHBhZGRpbmctbGVmdDogM3JlbTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gICAgLmZlYXR1cmVzX19pdGVtLWRlc2NyaXAge1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cblxuLmZlYXR1cmVzX19pdGVtLXBhbmVsLXR4dCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xuICAgIC5mZWF0dXJlc19faXRlbS1wYW5lbC10eHQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAzcmVtOyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5mZWF0dXJlc19faXRlbS1wYW5lbC10eHQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtOyB9IH1cbiAgLmZlYXR1cmVzX19pdGVtLXBhbmVsLXR4dCBzcGFuIHtcbiAgICBmb250LXNpemU6IC45cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgY29sb3I6ICMwMDcxZWI7IH1cblxuLmZlYXR1cmVzX19pdGVtLXRpdGxlIHtcbiAgZm9udC1zaXplOiAzLjEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogLjVyZW07IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xuICAgIC5mZWF0dXJlc19faXRlbS10aXRsZSB7XG4gICAgICBmb250LXNpemU6IDIuNXJlbTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuZmVhdHVyZXNfX2l0ZW0tdGl0bGUge1xuICAgICAgZm9udC1zaXplOiAycmVtOyB9IH1cblxuLmZlYXR1cmVzX19pdGVtLXR4dCB7XG4gIGZvbnQtc2l6ZTogMS42MjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xuICAgIC5mZWF0dXJlc19faXRlbS10eHQge1xuICAgICAgZm9udC1zaXplOiAxLjRyZW07IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmZlYXR1cmVzX19pdGVtLXR4dCB7XG4gICAgICBmb250LXNpemU6IDEuMnJlbTsgfSB9XG5cbi5mYXEge1xuICBwYWRkaW5nOiA3MHB4IDA7XG4gIGJvcmRlci1ib3R0b206IDhweCBzb2xpZCAjMjIyOyB9XG5cbi5mYXFfX3RpdGxlIHtcbiAgZm9udC1zaXplOiAzLjEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgICAuZmFxX190aXRsZSB7XG4gICAgICBmb250LXNpemU6IDIuNXJlbTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuZmFxX190aXRsZSB7XG4gICAgICBmb250LXNpemU6IDJyZW07IH0gfVxuXG4uZmFxX19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1heC13aWR0aDogNzAlO1xuICBtYXJnaW46IDJlbSBhdXRvOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgICAuZmFxX19saXN0IHtcbiAgICAgIG1heC13aWR0aDogMTAwJTsgfSB9XG5cbi5mYXFfX2l0ZW0ge1xuICBmb250LXNpemU6IDEuNjI1cmVtO1xuICBsaW5lLWhlaWdodDogMS4yO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDMwMzA7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xuICAgIC5mYXFfX2l0ZW0ge1xuICAgICAgZm9udC1zaXplOiAxLjNyZW07IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmZhcV9faXRlbSB7XG4gICAgICBmb250LXNpemU6IDFyZW07IH0gfVxuICAuZmFxX19pdGVtLmZhcV9faXRlbS0tYWN0aXZlIC5mYXFfX2l0ZW0tYW5zd2VyIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuZmFxX19pdGVtLmZhcV9faXRlbS0tYWN0aXZlIC5mYXFfX2l0ZW0taWNvbiB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG5cbi5mYXFfX2l0ZW0tcXVlc3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAuOGVtIDEuMmVtO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gICAgLmZhcV9faXRlbS1xdWVzdGlvbiB7XG4gICAgICBwYWRkaW5nOiAuNWVtIDEuMmVtOyB9IH1cblxuLmZhcV9faXRlbS1pY29uIHtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzBweDtcbiAgdHJhbnNpdGlvbjogMC4yNXMgY3ViaWMtYmV6aWVyKDAuNSwgMCwgMC4xLCAxKTtcbiAgZmlsbDogI2ZmZjsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gICAgLmZhcV9faXRlbS1pY29uIHtcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgaGVpZ2h0OiAyMHB4OyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5mYXFfX2l0ZW0taWNvbiB7XG4gICAgICB3aWR0aDogMTVweDtcbiAgICAgIGhlaWdodDogMTVweDsgfSB9XG5cbi5mYXFfX2l0ZW0tYW5zd2VyIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIHBhZGRpbmc6IDFyZW0gMS4yZW07IH1cblxuLmZhcV9faXRlbS1hbnN3ZXItdHh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMS4ycmVtOyB9XG5cbi5mb3JtLXN0YXJ0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luLXRvcDogLjg1cmVtOyB9XG5cbi5mb3JtLXdyYXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5mb3JtLXN0YXJ0X190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBtYXJnaW4tYm90dG9tOiAxLjJyZW07IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC5mb3JtLXN0YXJ0X190aXRsZSB7XG4gICAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICAgIG1heC13aWR0aDogMzAwcHg7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmZvcm0tc3RhcnRfX3RpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtOyB9IH1cblxuLmZvcm0tc3RhcnRfX2lubmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC5mb3JtLXN0YXJ0X19pbm5lciB7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfSB9XG5cbi5mb3JtLXN0YXJ0X19pbnB1dCB7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xuICB3aWR0aDogMTAwJTtcbiAgbWluLXdpZHRoOiA0NTBweDtcbiAgcGFkZGluZzogMjBweCAxMHB4O1xuICBib3JkZXItcmFkaXVzOiAycHggMCAwIDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gICAgLmZvcm0tc3RhcnRfX2lucHV0IHtcbiAgICAgIG1pbi13aWR0aDogNDAwcHg7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLmZvcm0tc3RhcnRfX2lucHV0IHtcbiAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMnB4OyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5mb3JtLXN0YXJ0X19pbnB1dCB7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICBwYWRkaW5nOiAxMnB4IDEwcHg7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmZvcm0tc3RhcnRfX2lucHV0IHtcbiAgICAgIG1pbi13aWR0aDogMzAwcHg7XG4gICAgICBtYXgtd2lkdGg6IDMwMHB4OyB9IH1cblxuLmZvcm0tc3RhcnRfX3N1Ym1pdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICNmZmY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNTA5MTQ7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzIyMjtcbiAgcGFkZGluZzogMTVweCAxNjBweDtcbiAgYm9yZGVyLXJhZGl1czogMHB4IDJweCAycHggMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U1MDkxNDsgfVxuICAuZm9ybS1zdGFydF9fc3VibWl0OmhvdmVyIHtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4xcyBsaW5lYXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1MGQxOTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLmZvcm0tc3RhcnRfX3N1Ym1pdCB7XG4gICAgICBwYWRkaW5nOiAyNXB4IDEyMHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMnB4OyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5mb3JtLXN0YXJ0X19zdWJtaXQge1xuICAgICAgcGFkZGluZzogMjBweCA5MHB4OyB9IH1cbiAgLmZvcm0tc3RhcnRfX3N1Ym1pdDpmb2N1cyB7XG4gICAgb3V0bGluZTogMXB4IGRvdHRlZCAjMjEyMTIxO1xuICAgIG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjsgfVxuICAuZm9ybS1zdGFydF9fc3VibWl0IHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMS43cmVtO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWluLXdpZHRoOiAxMDAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAuZm9ybS1zdGFydF9fc3VibWl0IHNwYW4ge1xuICAgICAgICBmb250LXNpemU6IDEuMnJlbTsgfSB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgICAgLmZvcm0tc3RhcnRfX3N1Ym1pdCBzcGFuIHtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtOyB9IH1cblxuLmZvcm0tc3RhcnRfX2ljb24ge1xuICB3aWR0aDogMTdweDtcbiAgaGVpZ2h0OiAxN3B4O1xuICBtYXJnaW4tbGVmdDogLjVyZW07XG4gIGZpbGw6ICNmZmY7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC5mb3JtLXN0YXJ0X19pY29uIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4uaGVhZGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxMDAwO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHB4OyB9XG5cbi5oZWFkZXJfX2lubmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW46IDAgMS41cmVtOyB9XG5cbi5oZWFkZXJfX2xvZ28ge1xuICBtYXgtd2lkdGg6IDE3MHB4OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuaGVhZGVyX19sb2dvIHtcbiAgICAgIG1heC13aWR0aDogMTMwcHg7IH0gfVxuXG4uaGVhZGVyX19saW5rIHtcbiAgcGFkZGluZzogOHB4IDE4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweCAzcHggM3B4IDNweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U1MDkxNDsgfVxuICAuaGVhZGVyX19saW5rOmhvdmVyIHtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4xcyBsaW5lYXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1MGQxOTsgfVxuXG4uZm9vdGVyIHtcbiAgcGFkZGluZzogNzBweCAwIDMwcHg7IH1cblxuLmZvb3Rlcl9faW5uZXIge1xuICBwYWRkaW5nOiAwIDMwMHB4IDAgMTUwcHg7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xuICAgIC5mb290ZXJfX2lubmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgNDBweDsgfSB9XG5cbi5mb290ZXJfX2l0ZW1zLXdyYXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cblxuLmZvb3Rlcl9faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbi1yaWdodDogLjdyZW07IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5mb290ZXJfX2l0ZW0ge1xuICAgICAgd2lkdGg6IDM1JTsgfSB9XG5cbi5mb290ZXJfX2l0ZW0tbGluayB7XG4gIGZvbnQtc2l6ZTogLjhyZW07XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgY29sb3I6ICM3YjdiN2I7IH1cbiAgLmZvb3Rlcl9faXRlbS1saW5rOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICAuZm9vdGVyX19pdGVtLWxpbmsuZm9vdGVyX19pdGVtLWxpbmstLWNvbnRhY3Qge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG5cbi5mb290ZXJfX2l0ZW0tY291bnRyeSB7XG4gIGZvbnQtc2l6ZTogLjhyZW07XG4gIG1hcmdpbi10b3A6IDEuNXJlbTtcbiAgY29sb3I6ICM3YjdiN2I7IH1cbiIsIkBpbXBvcnQgJy4uLy4uL2xvY2FsX21vZHVsZXMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUnO1xuXG4qLFxuKjo6YWZ0ZXIsXG4qOjpiZWZvcmUge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmEge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG59XG5cbnVsLFxubGkge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG5saSB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuXG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG5cbnAge1xuICAgIG1hcmdpbjogLjVyZW0gMDtcbn1cblxuaW5wdXQge1xuICAgIGZvbnQ6IGluaGVyaXQ7XG5cbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbn1cblxuaW5wdXRbdHlwZT0nYnV0dG9uJ10ge1xuICAgIHBhZGRpbmc6IDA7XG5cbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmJ1dHRvbiB7XG4gICAgZm9udDogaW5oZXJpdDtcblxuICAgIHBhZGRpbmc6IDA7XG5cbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQ7XG5cbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xufVxuXG5odG1sIHtcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgICBmb250LXNpemU6IDE2cHg7XG59XG5cbmJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC10eHQ7XG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcblxuICAgIG1hcmdpbjogMDtcblxuICAgIGNvbG9yOiAkY29sb3ItcHJpbWFyeS1saWdodDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItcHJpbWFyeS1kYXJrO1xufVxuXG4uY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTIwMHB4O1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogMCAxNXB4O1xufVxuIiwiLmludHJvIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLy8gbWluLWhlaWdodDogMTAwdmg7XG5cbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuXG4gICAgLy8gQGluY2x1ZGUgbWVkaWEtdGFibGV0LWxzIHtcbiAgICAvLyAgICAgbWluLWhlaWdodDogOTV2aDtcbiAgICAvLyB9XG4gICAgLy8gQGluY2x1ZGUgbWVkaWEtc21hcnRwaG9uZS1scyB7XG4gICAgLy8gICAgIG1pbi1oZWlnaHQ6IDgwdmg7XG4gICAgLy8gfVxuICAgIC8vIEBpbmNsdWRlIG1lZGlhLXNtYXJ0cGhvbmUtbHMge1xuICAgIC8vICAgICBtaW4taGVpZ2h0OiA4NXZoO1xuICAgIC8vIH1cblxuICAgICY6OmFmdGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG5cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcblxuICAgICAgICBjb250ZW50OiAnJztcblxuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAgLDAsIC40KTtcbiAgICB9XG59XG5cbi5pbnRyb19faW5uZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICBtYXgtd2lkdGg6IDk1MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDIzMHB4IDAgMTYwcHg7XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5pbnRyb19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMy4xMjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcblxuICAgIG1heC13aWR0aDogNjI1cHg7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1zbWFydHBob25lLWxzIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjdyZW07XG4gICAgfVxufVxuXG4uaW50cm9fX3N1YnRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuNjI1cmVtO1xuXG4gICAgbWFyZ2luOiAxcmVtO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtc21hcnRwaG9uZS1scyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xuICAgIH1cbiAgICBAaW5jbHVkZSBtZWRpYS1zbWFydHBob25lLWxzIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgfVxufVxuIiwiLmZlYXR1cmVzX19pdGVtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICBwYWRkaW5nOiA0NXB4IDQ1cHg7XG5cbiAgICBib3JkZXItdG9wOiA4cHggc29saWQgJGNvbG9yLXRlcnRpYXJ5LWRhcms7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS10YWJsZXQtbHMge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIH1cblxuICAgICY6bnRoLWNoaWxkKG9kZCkge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0LWxzIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItYm90dG9tOiA4cHggc29saWQgJGNvbG9yLXRlcnRpYXJ5LWRhcms7XG4gICAgfVxufVxuXG4uZmVhdHVyZXNfX2l0ZW0taW1nLWNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgbWF4LXdpZHRoOiA0MiU7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS10YWJsZXQtbHMge1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgfVxufVxuXG4uZmVhdHVyZXNfX2l0ZW0taW1nIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMjtcblxuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5mZWF0dXJlc19faXRlbS12aWQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcblxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgICYuZmVhdHVyZXNfX2l0ZW0tdmlkLS10diB7XG4gICAgICAgIHRvcDogNDglO1xuICAgICAgICBsZWZ0OiA0OSU7XG5cbiAgICAgICAgbWF4LXdpZHRoOiA3NSU7XG4gICAgICAgIG1heC1oZWlnaHQ6IDU1JTtcblxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNDklLCAtNTAlKTtcbiAgICB9XG5cbiAgICAmLmZlYXR1cmVzX19pdGVtLXZpZC0tbWFjIHtcbiAgICAgICAgdG9wOiAzNCU7XG4gICAgICAgIGxlZnQ6IDUwJTtcblxuICAgICAgICBtYXgtd2lkdGg6IDYzJTtcbiAgICAgICAgbWF4LWhlaWdodDogNDclO1xuXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIH1cbn1cblxuLmZlYXR1cmVzX19pdGVtLXBhbmVsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMjtcbiAgICB0b3A6IDcwJTtcbiAgICBsZWZ0OiA1MCU7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gICAgd2lkdGg6IDYwJTtcbiAgICBwYWRkaW5nOiAuNWVtIC43NWVtO1xuXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTEwJSk7XG5cbiAgICBib3JkZXI6IDJweCBzb2xpZCAkY29sb3Itc2Vjb25kYXJ5LWRhcms7XG4gICAgYm9yZGVyLXJhZGl1czogLjc1ZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXByaW1hcnktZGFyaztcblxuICAgIEBpbmNsdWRlIG1lZGlhLXRhYmxldC1scyB7XG4gICAgICAgIHdpZHRoOiA2NSU7XG4gICAgfVxuICAgIEBpbmNsdWRlIG1lZGlhLXNtYXJ0cGhvbmUtcHQge1xuICAgICAgICB3aWR0aDogMTEwJTtcbiAgICB9XG59XG5cbi5mZWF0dXJlc19faXRlbS1wYW5lbC1pbWcge1xuICAgIG1heC13aWR0aDogMTclO1xuICAgIG1hcmdpbi1yaWdodDogMWVtO1xufVxuXG4uZmVhdHVyZXNfX2l0ZW0tZGVzY3JpcCB7XG4gICAgbWF4LXdpZHRoOiA0OSU7XG4gICAgcGFkZGluZy1sZWZ0OiAzcmVtO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0LWxzIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG5cbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbn1cblxuLmZlYXR1cmVzX19pdGVtLXBhbmVsLXR4dCB7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcblxuICAgIEBpbmNsdWRlIG1lZGlhLXRhYmxldC1scyB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogM3JlbTtcbiAgICB9XG4gICAgQGluY2x1ZGUgbWVkaWEtc21hcnRwaG9uZS1wdCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICB9XG5cbiAgICAmIHNwYW4ge1xuICAgICAgICBmb250LXNpemU6IC45cmVtO1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuXG4gICAgICAgIGNvbG9yOiAjMDA3MWViO1xuICAgIH1cbn1cblxuLmZlYXR1cmVzX19pdGVtLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDMuMTI1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG5cbiAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcblxuICAgIEBpbmNsdWRlIG1lZGlhLXRhYmxldC1scyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICAgIH1cbiAgICBAaW5jbHVkZSBtZWRpYS1zbWFydHBob25lLXB0IHtcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgIH1cbn1cblxuLmZlYXR1cmVzX19pdGVtLXR4dCB7XG4gICAgZm9udC1zaXplOiAxLjYyNXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0LWxzIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjRyZW07XG4gICAgfVxuICAgIEBpbmNsdWRlIG1lZGlhLXNtYXJ0cGhvbmUtcHQge1xuICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICB9XG59XG4iLCJAbWl4aW4gbWVkaWEtbGFwdG9wIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRtZWRpYS14bCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBtZWRpYS10YWJsZXQtbHMge1xuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogJG1lZGlhLWxnKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIG1lZGlhLXRhYmxldC1wdCB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbWVkaWEtbWQpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG5AbWl4aW4gbWVkaWEtc21hcnRwaG9uZS1scyB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbWVkaWEtc20pIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG5AbWl4aW4gbWVkaWEtc21hcnRwaG9uZS1wdCB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbWVkaWEteHMpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG5AbWl4aW4gbWVkaWEtY3VzdG9tKCR3aWR0aCkge1xuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHdpZHRoKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIG1lZGlhLWN1c3RvbS1tZigkd2lkdGgpIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR3aWR0aCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG4iLCIuZmFxIHtcbiAgICBwYWRkaW5nOiA3MHB4IDA7XG5cbiAgICBib3JkZXItYm90dG9tOiA4cHggc29saWQgJGNvbG9yLXRlcnRpYXJ5LWRhcms7XG59XG5cbi5mYXFfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDMuMTI1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS10YWJsZXQtbHMge1xuICAgICAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgICB9XG4gICAgQGluY2x1ZGUgbWVkaWEtc21hcnRwaG9uZS1wdCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICB9XG59XG5cbi5mYXFfX2xpc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgbWF4LXdpZHRoOiA3MCU7XG4gICAgbWFyZ2luOiAyZW0gYXV0bztcblxuICAgIEBpbmNsdWRlIG1lZGlhLXRhYmxldC1scyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICB9XG59XG5cbi5mYXFfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMS42MjVyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcblxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG5cbiAgICBjb2xvcjogJGNvbG9yLXByaW1hcnktbGlnaHQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXNlY29uZGFyeS1kYXJrO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0LWxzIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjNyZW07XG4gICAgfVxuICAgIEBpbmNsdWRlIG1lZGlhLXNtYXJ0cGhvbmUtcHQge1xuICAgICAgICBmb250LXNpemU6IDFyZW07XG4gICAgfVxuXG4gICAgJi5mYXFfX2l0ZW0tLWFjdGl2ZSAuZmFxX19pdGVtLWFuc3dlciB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgICYuZmFxX19pdGVtLS1hY3RpdmUgLmZhcV9faXRlbS1pY29uIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIH1cbn1cblxuLmZhcV9faXRlbS1xdWVzdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IC44ZW0gMS4yZW07XG5cbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yLXByaW1hcnktZGFyaztcblxuICAgIEBpbmNsdWRlIG1lZGlhLXRhYmxldC1scyB7XG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMS4yZW07XG4gICAgfVxufVxuXG4uZmFxX19pdGVtLWljb24ge1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMzBweDtcblxuICAgIHRyYW5zaXRpb246IC4yNXMgY3ViaWMtYmV6aWVyKC41LDAsLjEsMSk7XG5cbiAgICBmaWxsOiAkY29sb3ItcHJpbWFyeS1saWdodDtcbiAgICBAaW5jbHVkZSBtZWRpYS10YWJsZXQtbHMge1xuICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgIH1cbiAgICBAaW5jbHVkZSBtZWRpYS1zbWFydHBob25lLXB0IHtcbiAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgIGhlaWdodDogMTVweDtcbiAgICB9XG59XG5cbi5mYXFfX2l0ZW0tYW5zd2VyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgcGFkZGluZzogMXJlbSAxLjJlbTtcbn1cblxuLmZhcV9faXRlbS1hbnN3ZXItdHh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjJyZW07XG59XG4iLCIvLyBCcmVha3BvaW50c1xuJG1lZGlhLXhsOiAxMTk5cHg7XG4kbWVkaWEtbGc6IDk5MXB4O1xuJG1lZGlhLW1kOiA3NjdweDtcbiRtZWRpYS1zbTogNTc1cHg7XG4kbWVkaWEteHM6IDQ4MHB4O1xuLy8gQ29sb3JzXG4kY29sb3ItcHJpbWFyeS1saWdodDogI2ZmZjtcbiRjb2xvci1wcmltYXJ5LWRhcms6ICMwMDA7XG4kY29sb3Itc2Vjb25kYXJ5LWxpZ2h0OiAjZTUwOTE0O1xuJGNvbG9yLXNlY29uZGFyeS1kYXJrOiAjMzAzMDMwO1xuJGNvbG9yLXRlcnRpYXJ5LWRhcms6ICMyMjI7XG4vLyBGb250c1xuJGZvbnQtdHh0OiAnQXJpYWwnLCBzYW5zLXNlcmlmO1xuIiwiLmZvcm0tc3RhcnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgbWFyZ2luLXRvcDogLjg1cmVtO1xufVxuXG4uZm9ybS13cmFwIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9ybS1zdGFydF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuXG4gICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0LXB0IHtcbiAgICAgICAgZm9udC1zaXplOiAxLjRyZW07XG5cbiAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICB9XG4gICAgQGluY2x1ZGUgbWVkaWEtc21hcnRwaG9uZS1scyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIH1cbn1cblxuLmZvcm0tc3RhcnRfX2lubmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0LXB0IHtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG59XG5cbi5mb3JtLXN0YXJ0X19pbnB1dCB7XG4gICAgZm9udC1zaXplOiAxLjFyZW07XG5cbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDQ1MHB4O1xuICAgIHBhZGRpbmc6IDIwcHggMTBweDtcblxuICAgIGJvcmRlci1yYWRpdXM6IDJweCAwIDAgMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1wcmltYXJ5LWxpZ2h0O1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0LWxzIHtcbiAgICAgICAgbWluLXdpZHRoOiA0MDBweDtcbiAgICB9XG4gICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0LXB0IHtcbiAgICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcblxuICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgfVxuICAgIEBpbmNsdWRlIG1lZGlhLXNtYXJ0cGhvbmUtbHMge1xuICAgICAgICBmb250LXNpemU6IDFyZW07XG5cbiAgICAgICAgcGFkZGluZzogMTJweCAxMHB4O1xuICAgIH1cbiAgICBAaW5jbHVkZSBtZWRpYS1zbWFydHBob25lLXB0IHtcbiAgICAgICAgbWluLXdpZHRoOiAzMDBweDtcbiAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICB9XG59XG5cbi5mb3JtLXN0YXJ0X19zdWJtaXQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIGNvbG9yOiAkY29sb3ItcHJpbWFyeS1saWdodDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3Itc2Vjb25kYXJ5LWxpZ2h0O1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGNvbG9yLXRlcnRpYXJ5LWRhcms7XG5cbiAgICBAaW5jbHVkZSBsaW5rKDE1cHgsIDE2MHB4LCAwcHgsIDJweCwgMnB4LCAwKTtcbiAgICBAaW5jbHVkZSBtZWRpYS10YWJsZXQtcHQge1xuICAgICAgICBwYWRkaW5nOiAyNXB4IDEyMHB4O1xuXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICB9XG4gICAgQGluY2x1ZGUgbWVkaWEtc21hcnRwaG9uZS1scyB7XG4gICAgICAgIHBhZGRpbmc6IDIwcHggOTBweDtcbiAgICB9XG4gICAgJjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IDFweCBkb3R0ZWQgIzIxMjEyMTtcbiAgICAgICAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xuICAgIH1cblxuICAgICYgc3BhbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS43cmVtO1xuXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIGxlZnQ6IDUwJTtcblxuICAgICAgICBtaW4td2lkdGg6IDEwMCU7XG5cbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0LXB0IHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgICB9XG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLXNtYXJ0cGhvbmUtbHMge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4uZm9ybS1zdGFydF9faWNvbiB7XG4gICAgd2lkdGg6IDE3cHg7XG4gICAgaGVpZ2h0OiAxN3B4O1xuICAgIG1hcmdpbi1sZWZ0OiAuNXJlbTtcblxuICAgIGZpbGw6ICRjb2xvci1wcmltYXJ5LWxpZ2h0O1xuICAgIEBpbmNsdWRlIG1lZGlhLXRhYmxldC1wdCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuIiwiQG1peGluIGxpbmsoJHdpZHRoLCAkaGVpZ2h0LCAkcjEsICRyMiwgJHIzLCAkcjQpIHtcbiAgICBwYWRkaW5nOiAkd2lkdGggJGhlaWdodDtcblxuICAgIGJvcmRlci1yYWRpdXM6ICRyMSAkcjIgJHIzICRyNDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3Itc2Vjb25kYXJ5LWxpZ2h0O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjFzIGxpbmVhcjtcblxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRjb2xvci1zZWNvbmRhcnktbGlnaHQsIDQpO1xuICAgIH1cbn1cbiIsIi8vIGhlYWRlciB7XG4vLyAgICAgQGluY2x1ZGUgbWVkaWEtdGFibGV0IHtcbi8vICAgICAgICAgd2lkdGg6IDUwMHB4O1xuLy8gICAgIH1cbi8vIH1cblxuLmhlYWRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDEwMDA7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG5cbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMHB4O1xufVxuXG4uaGVhZGVyX19pbm5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgIG1hcmdpbjogMCAxLjVyZW07XG59XG5cbi5oZWFkZXJfX2xvZ28ge1xuICAgIG1heC13aWR0aDogMTcwcHg7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1zbWFydHBob25lLXB0IHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMzBweDtcbiAgICB9XG59XG5cbi5oZWFkZXJfX2xpbmsge1xuICAgIEBpbmNsdWRlIGxpbmsoOHB4LCAxOHB4LCAzcHgsIDNweCwgM3B4LCAzcHgpO1xufVxuIiwiLmZvb3RlciB7XG4gICAgcGFkZGluZzogNzBweCAwIDMwcHg7XG59XG5cbi5mb290ZXJfX2lubmVyIHtcbiAgICBwYWRkaW5nOiAwIDMwMHB4IDAgMTUwcHg7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS10YWJsZXQtbHMge1xuICAgICAgICBwYWRkaW5nOiAwIDQwcHg7XG4gICAgfVxufVxuXG4uZm9vdGVyX19pdGVtcy13cmFwIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5mb290ZXJfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIG1hcmdpbi1yaWdodDogLjdyZW07XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1zbWFydHBob25lLWxzIHtcbiAgICAgICAgd2lkdGg6IDM1JTtcbiAgICB9XG59XG5cbi5mb290ZXJfX2l0ZW0tbGluayB7XG4gICAgZm9udC1zaXplOiAuOHJlbTtcblxuICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcblxuICAgIGNvbG9yOiBsaWdodGVuKCRjb2xvci10ZXJ0aWFyeS1kYXJrLCAzNSk7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuXG4gICAgJi5mb290ZXJfX2l0ZW0tbGluay0tY29udGFjdCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcblxuICAgICAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIH1cbn1cblxuLmZvb3Rlcl9faXRlbS1jb3VudHJ5IHtcbiAgICBmb250LXNpemU6IC44cmVtO1xuXG4gICAgbWFyZ2luLXRvcDogMS41cmVtO1xuXG4gICAgY29sb3I6IGxpZ2h0ZW4oJGNvbG9yLXRlcnRpYXJ5LWRhcmssIDM1KTtcbn1cbiJdfQ== */

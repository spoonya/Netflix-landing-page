/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:border-box}a{display:inline-block;cursor:pointer;text-decoration:none}img{display:block;width:100%;height:auto}li,ul{margin:0;padding:0}li{list-style:none}h1,h2,h3,h4,h5,h6{font-weight:400;margin:0;padding:0}p{margin:.5rem 0}input{font:inherit;border:none;background:0 0}input[type=button]{padding:0;cursor:pointer}button{font:inherit;padding:0;cursor:pointer;letter-spacing:inherit;color:inherit;border:none;outline:0;background:0 0}html{scroll-behavior:smooth}body{font:16px/1.1 Arial,sans-serif;background:#000;margin:0;color:#fff}.container{width:1200px;max-width:100%;margin:auto;padding:0 15px}.intro{position:relative;background-repeat:no-repeat;background-position:center;background-size:cover}.intro::after{position:absolute;top:0;left:0;display:block;width:100%;height:100%;content:'';background:rgba(0,0,0,.4)}.intro__inner{position:relative;z-index:1;display:flex;align-items:center;flex-direction:column;justify-content:center;max-width:950px;margin:0 auto;padding:230px 0 160px;text-align:center}.intro__title{font-size:3.125rem;font-weight:600;max-width:625px}@media only screen and (max-width:575px){.intro__title{font-size:1.7rem}}.intro__subtitle{font-size:1.625rem;margin:1rem}@media only screen and (max-width:575px){.intro__subtitle{font-size:1.4rem}}@media only screen and (max-width:575px){.intro__subtitle{font-size:1.2rem}}.features__item{display:flex;align-items:center;justify-content:center;padding:45px 45px;border-top:8px solid #222}@media only screen and (max-width:991px){.features__item{flex-direction:column}}.features__item:nth-child(odd){flex-direction:row-reverse}@media only screen and (max-width:991px){.features__item:nth-child(odd){flex-direction:column}}.features__item:last-child{border-bottom:8px solid #222}.features__item-img-container{position:relative;max-width:42%}@media only screen and (max-width:991px){.features__item-img-container{max-width:100%}}.features__item-img{position:relative;z-index:2;overflow:hidden}.features__item-vid{position:absolute;width:100%;height:100%}.features__item-vid.vid--tv{top:48%;left:49%;max-width:75%;max-height:55%;transform:translate(-49%,-50%)}.features__item-vid.vid--mac{top:34%;left:50%;max-width:63%;max-height:47%;transform:translate(-50%,-50%)}.features__item-panel{background:#000;position:absolute;z-index:2;top:70%;left:50%;display:flex;align-items:center;justify-content:space-between;width:60%;padding:.5em .75em;transform:translate(-50%,-10%);border:2px solid #303030;border-radius:.75em}@media only screen and (max-width:991px){.features__item-panel{width:65%}}@media only screen and (max-width:480px){.features__item-panel{width:110%}}.features__item-panel-img{max-width:17%;margin-right:1em}.features__item-descrip{max-width:49%;padding-left:3rem}@media only screen and (max-width:991px){.features__item-descrip{max-width:100%;padding-left:0;text-align:center}}.features__item-panel-txt{font-weight:600}@media only screen and (max-width:991px){.features__item-panel-txt{margin-right:3rem}}@media only screen and (max-width:480px){.features__item-panel-txt{margin-right:1rem}}.features__item-panel-txt span{font-size:.9rem;font-weight:400;color:#0071eb}.features__item-title{font-size:3.125rem;font-weight:600;margin-bottom:.5rem}@media only screen and (max-width:991px){.features__item-title{font-size:2.5rem}}@media only screen and (max-width:480px){.features__item-title{font-size:2rem}}.features__item-txt{font-size:1.625rem;line-height:1.2}@media only screen and (max-width:991px){.features__item-txt{font-size:1.4rem}}@media only screen and (max-width:480px){.features__item-txt{font-size:1.2rem}}.faq{padding:70px 0;border-bottom:8px solid #222}.faq__title{font-size:3.125rem;font-weight:600;text-align:center}@media only screen and (max-width:991px){.faq__title{font-size:2.5rem}}@media only screen and (max-width:480px){.faq__title{font-size:2rem}}.faq__list{display:flex;align-items:center;flex-direction:column;justify-content:center;max-width:70%;margin:2em auto}@media only screen and (max-width:991px){.faq__list{max-width:100%}}.faq__item{background:#303030;font-size:1.625rem;line-height:1.2;width:100%;margin-bottom:10px;color:#fff}@media only screen and (max-width:991px){.faq__item{font-size:1.3rem}}@media only screen and (max-width:480px){.faq__item{font-size:1rem}}.faq__item.faq__item--active .faq__item-answer{display:block}.faq__item.faq__item--active .faq__item-icon{transform:rotate(45deg)}.faq__item-question{display:flex;align-items:center;justify-content:space-between;width:100%;padding:.8em 1.2em;border-bottom:1px solid #000}@media only screen and (max-width:991px){.faq__item-question{padding:.5em 1.2em}}.faq__item-icon{width:30px;height:30px;transition:.25s cubic-bezier(.5,0,.1,1);fill:#fff}@media only screen and (max-width:991px){.faq__item-icon{width:20px;height:20px}}@media only screen and (max-width:480px){.faq__item-icon{width:15px;height:15px}}.faq__item-answer{display:none;max-width:1200px;padding:1rem 1.2em}.faq__item-answer-txt{margin-bottom:1.2rem}.form-start{display:flex;align-items:center;flex-direction:column;margin-top:.85rem}.form-wrap{display:flex;justify-content:center;text-align:center}.form-start__title{font-size:1.2rem;margin-bottom:1.2rem}@media only screen and (max-width:767px){.form-start__title{font-size:1.4rem;max-width:300px}}@media only screen and (max-width:575px){.form-start__title{font-size:1.2rem}}.form-start__inner{display:flex;align-items:stretch}@media only screen and (max-width:767px){.form-start__inner{align-items:center;flex-direction:column}}.form-start__input{background:#fff;font-size:1.1rem;width:100%;min-width:450px;padding:20px 10px;border-radius:2px 0 0 2px}@media only screen and (max-width:991px){.form-start__input{min-width:400px}}@media only screen and (max-width:767px){.form-start__input{max-width:450px;margin-bottom:15px;border-radius:2px}}@media only screen and (max-width:575px){.form-start__input{font-size:1rem;padding:12px 10px}}@media only screen and (max-width:480px){.form-start__input{min-width:300px;max-width:300px}}.form-start__submit{background:#e50914;position:relative;color:#fff;border:1px solid #e50914;border-left:1px solid #222;padding:15px 160px;border-radius:0 2px 2px 0}.form-start__submit:hover{background:#f50d19;transition:background-color .1s linear}@media only screen and (max-width:767px){.form-start__submit{padding:25px 120px;border-radius:2px}}@media only screen and (max-width:575px){.form-start__submit{padding:20px 90px}}.form-start__submit:focus{outline:1px dotted #212121;outline:5px auto -webkit-focus-ring-color}.form-start__submit span{font-size:1.7rem;position:absolute;top:50%;left:50%;min-width:100%;transform:translate(-50%,-50%);text-transform:uppercase}@media only screen and (max-width:767px){.form-start__submit span{font-size:1.2rem}}@media only screen and (max-width:575px){.form-start__submit span{font-size:1rem}}.form-start__icon{width:17px;height:17px;margin-left:.5rem;fill:#fff}@media only screen and (max-width:767px){.form-start__icon{display:none}}.header{position:absolute;z-index:1000;top:0;left:0;width:100%;height:100px}.header__inner{display:flex;align-items:center;justify-content:space-between;margin:0 1.5rem}.header__logo{max-width:170px}@media only screen and (max-width:480px){.header__logo{max-width:130px}}.header__link{background:#e50914;padding:8px 18px;border-radius:3px 3px 3px 3px}.header__link:hover{background:#f50d19;transition:background-color .1s linear}.footer{padding:70px 0 30px}.footer__inner{padding:0 300px 0 150px}@media only screen and (max-width:991px){.footer__inner{padding:0 40px}}.footer__items-wrap{display:flex;align-items:flex-start;flex-wrap:wrap;justify-content:space-between}.footer__item{display:flex;flex-direction:column;margin-right:.7rem}@media only screen and (max-width:575px){.footer__item{width:35%}}.footer__item-link{font-size:.8rem;margin-bottom:1.5rem;color:#7b7b7b}.footer__item-link:hover{text-decoration:underline}.footer__item-link.footer__item-link--contact{font-size:1rem;margin-bottom:2rem}.footer__item-country{font-size:.8rem;margin-top:1.5rem;color:#7b7b7b}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
